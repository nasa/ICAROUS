// -*- Mode: Java -*-
// Plan to fly to a specific waypoint

Boolean Command CheckDirectPathFeasibility(Real fromPosition[3],Real toPosition[3]);
Integer Command FindNewPath(String planID,String algorithm,Real fromPosition[3],Real fromVelocity[3],Real toPosition[3]);
Integer Command GetTotalWaypoints(String planID);
Real[3] Command GetWaypoint(String planID,Integer index);
Real Command Heading2Maneuver(Real fromPosition[3],Real toPosition[3]);
Real Command ComputeDistance(Real fromPosition[3],Real toPosition[3]);
Command SetPos(Real position[3]);
Command SetMode(String mode);
Command SetVel(Real velocity[3]);
Command pprint(...);
Real[3] Lookup position;
Real[3] Lookup velocity;
Real Lookup captureH;

GOTO_POSITION:{

    In String SearchType;
    In Boolean TrafficConflict;
    In Real TargetPosition[3];
    In Real resSpeed;
    InOut Boolean resolutionCompleted;
    Real CurrentPosition[3];
    Real CurrentVelocity[3];
    Boolean targetFeasibility;
    Real capH;
    Integer nextWPIndex = 1;
    Integer totalWPIndex;
    EndCondition isKnown(resolutionCompleted);

    pprint("Plexil status: In Library call GOTO_POSITION");

    CurrentPosition = Lookup(position);
    CurrentVelocity = Lookup(velocity);
    capH = Lookup(captureH);

    SetMode("ACTIVE");
    
    CHECK_FEASIBILITY:{

        pprint("Plexil status: checking target feasibility");

        {
	        EndCondition isKnown(targetFeasibility);
	        targetFeasibility = CheckDirectPathFeasibility(CurrentPosition,TargetPosition);
	    }

        pprint("Plexil status: Target feasibility ",targetFeasibility);

	    {
          	SkipCondition !TrafficConflict;
           	targetFeasibility = false;
        }

    }


    BEE_LINE:{
        SkipCondition !targetFeasibility;

        pprint("Plexil status: Going to target:",TargetPosition);

        SetPos(TargetPosition);

        {
            Real dist2nextWP;
            Repeat true;

            CurrentPosition = Lookup(position);

            {
                EndCondition isKnown(dist2nextWP);
                dist2nextWP = ComputeDistance(CurrentPosition,TargetPosition);
            }

            if(dist2nextWP < 2.0){
                resolutionCompleted = true;
            }endif

        }
    }

    PLAN_PATH:{
        Integer status;
        SkipCondition targetFeasibility;

        //pprint("Plexil status: Planning a path to target location");

        {
            EndCondition isKnown(status);
            status = FindNewPath("Plan1",SearchType,CurrentPosition,CurrentVelocity,TargetPosition);
        }

        if(status < 0){
            resolutionCompleted = false;
            pprint("Plexil status: Failed to Compute resolution");
        }endif

        {
            EndCondition isKnown(totalWPIndex);
            totalWPIndex = GetTotalWaypoints("Plan1");
        }

        pprint("Plexil status: Computed waypoint with:",SearchType);

    }

    CHECK_WP_TRANSITION:{
        Real NextWP[3];

        {
            EndCondition isKnown(NextWP[0]);
            NextWP = GetWaypoint("Plan1",nextWPIndex);
        }

        // Use set pos to go to spot directly
        //SetPos(NextWP);


        //pprint("Setting position");

        {
            Real dist2nextWP;
            Real heading2nextWP;
            Real velocityCmd[3];
            Repeat true;

            CurrentPosition = Lookup(position);

            {
               EndCondition isKnown(heading2nextWP);
               heading2nextWP = Heading2Maneuver(CurrentPosition,NextWP);
            }


            {
                EndCondition isKnown(dist2nextWP);
                dist2nextWP = ComputeDistance(CurrentPosition,NextWP);
            }

            velocityCmd[0] = heading2nextWP;
            velocityCmd[1] = resSpeed;

            SetVel(velocityCmd);


            //pprint("dist2nextWP:",dist2nextWP);

            //pprint("resSpeed:",resSpeed);

            //pprint("capH:",capH);

            {
                SkipCondition dist2nextWP > capH;
                nextWPIndex = nextWPIndex + 1;

                {
                    SkipCondition nextWPIndex <= totalWPIndex -1;
                    resolutionCompleted = true;
                }

                {
                    Real _nextWP[3];
                    StartCondition (nextWPIndex <= totalWPIndex - 1);

                    {
                        EndCondition isKnown(_nextWP[0]);
                        _nextWP = GetWaypoint("Plan1",nextWPIndex);
                    }

                    //SetPos(_nextWP);
                    NextWP[0] = _nextWP[0];
                    NextWP[1] = _nextWP[1];
                    NextWP[2] = _nextWP[2];
                }

            }

        }
    }
}
